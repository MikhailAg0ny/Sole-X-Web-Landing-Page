:root {
  --header-h: clamp(56px, 48px + 1vw, 72px);
  --color-bg: #000;
  --color-fg: #fff;
  --elev: #0a0a0a;
  --border: #1a1a1a;
  --muted: #cfcfcf;
  --accent: #ffffff;
  --theme-transition: 320ms;
  --x: 50vw;
  --y: 50vh;
  /* Theme-aware shadow tokens: use var(--color-fg) to ensure visibility in both themes */
  --shadow-ambient: 0 2px 8px
    color-mix(in oklab, var(--color-fg) 6%, transparent);
  --shadow-1: 0 6px 16px color-mix(in oklab, var(--color-fg) 8%, transparent);
  --shadow-2: 0 10px 28px color-mix(in oklab, var(--color-fg) 12%, transparent);
  --glow-1: 0 0 0 2px color-mix(in oklab, var(--color-fg) 14%, transparent)
    inset;
  --ring: 0 0 0 1px var(--border);
  /* Safe area insets for iOS */
  --safe-top: env(safe-area-inset-top, 0px);
  --safe-bottom: env(safe-area-inset-bottom, 0px);
}

[data-theme="light"] {
  --color-bg: #ffffff;
  --color-fg: #111111;
  --elev: #f6f6f6;
  --border: #e5e5e5;
  --muted: #4a4a4a;
  --accent: #000000;
  --theme-transition: 320ms;
  /* The same shadow vars work cross-theme because they derive from --color-fg */
}
*,
*::before,
*::after {
  box-sizing: border-box;
}
html,
body,
#root {
  height: 100%;
}
body {
  margin: 0;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial,
    sans-serif;
  color: var(--color-fg);
  background: var(--color-bg);
  transition: color var(--theme-transition) ease-in-out,
    background-color var(--theme-transition) ease-in-out;
  overflow-x: hidden; /* prevent accidental horizontal scroll on mobile */
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  word-break: break-word;
  overflow-wrap: anywhere;
}
#root {
  view-transition-name: root;
}
/* Wave sweep reveal using clip-path inset with rounded leading edge */
@supports (view-transition-name: root) {
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation-duration: var(--theme-transition);
    animation-timing-function: ease-in-out;
  }
  /* Start with the new theme masked to a narrow rounded strip from chosen side */
  ::view-transition-new(root) {
    clip-path: inset(
      0 var(--clip-right, 100%) 0 var(--clip-left, 0%) round var(--r1, 0)
        var(--r2, 40vmax) var(--r3, 40vmax) var(--r4, 0)
    );
    animation-name: wave-wipe;
  }
  @keyframes wave-wipe {
    to {
      clip-path: inset(0 0 0 0 round 0 0 0 0);
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  body {
    transition: none;
  }
}
a {
  color: var(--color-fg);
  text-decoration: none;
}
a:hover {
  color: var(--accent);
}
img {
  max-width: 100%;
  display: block;
  height: auto;
}

/* Desktop-only: use custom .cur cursor; allow toggling hide/show */
@media (hover: hover) and (pointer: fine) {
  /* Use custom cursor only for pointer/interactive elements */
  /* Pointer style for interactive elements */
  html:not([data-cursor-hidden="1"]) :is(
    a,
    button,
    label,
    summary,
    select,
    [role="button"],
    [role="link"],
    [data-cursor="link"],
    [data-cursor="pointer"],
    input[type="button"],
    input[type="submit"],
    input[type="checkbox"],
    input[type="radio"],
    .clickable,
    .btn,
    .burger,
    .close
  ) {
    cursor: var(--cursor-url) var(--cursor-hotspot-x, 0) var(--cursor-hotspot-y, 0), pointer;
  }

  /* Hide cursor when toggled */
  html[data-cursor-hidden="1"] :is(
    body,
    a,
    button,
    label,
    summary,
    select,
    [role="button"],
    [role="link"],
    [data-cursor="link"],
    [data-cursor="pointer"],
    input[type="button"],
    input[type="submit"],
    input[type="checkbox"],
    input[type="radio"],
    .clickable,
    .btn,
    .burger,
    .close
  ) {
    cursor: none !important;
  }
}

/* Generic section/container defaults for better mobile fit */
section {
  contain: layout paint;
}

/* Respect iOS safe-areas for fixed headers/footers spacing */
main { padding-bottom: var(--safe-bottom); }

/* Make buttons and inputs more finger-friendly on small screens */
@media (max-width: 540px) {
  button, .btn, [role="button"], input, select, textarea {
    min-height: 44px;
  }
}

/* Smooth reveal utility */
[data-reveal] {
  opacity: 0;
  transform: translateY(14px);
  transition: opacity 0.48s ease, transform 0.48s ease;
}
.reveal-in {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

/* Short-screen global adjustments to compress vertical rhythm */
@media (max-height: 620px) and (max-width: 900px) {
  :root { --header-h: clamp(48px, 44px + 1vw, 60px); }
  body { -webkit-text-size-adjust: 100%; text-size-adjust: 100%; }
  main { padding-bottom: max(8px, var(--safe-bottom)); }
  section { scroll-margin-top: var(--header-h); }
}
